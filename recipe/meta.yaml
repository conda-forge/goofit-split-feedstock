{% set version = "2.2.3" %}
{% set name = "goofit" %}

{% set goofit_proc_type = "cpu" if cuda_compiler_version|default("None") == "None" else "gpu" %}
{% set goofit_cuda_supported = ["None", "9.2", "10.0"] %}

package:
  name: goofit-split

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 7f80e9a8091bc029a92f562539e330587245885329456d8b7783127b6ae7aae8
  
build:
  skip: true  # [win]
  {% if cuda_compiler_version|default("None") not in goofit_cuda_supported %}
  skip: true
  {% endif %}
  number: 1

outputs:
  - name: goofit-proc
    version: "1.0.0"
    build:
      number: 1
      string: "{{ goofit_proc_type }}"
    test:
      commands:
        - exit 0
    about:
      home: https://github.com/conda-forge/goofit-feedstock
      license: BSD-3-Clause
      license_family: BSD
      summary: A meta-package to select CPU or GPU GooFit build.

  - name: goofit
    version: {{ version }}
    build:
      number: 2
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - {{ compiler("cuda") }}  # [linux and cuda_compiler_version != "None"]
        - cmake ==3.15.*
        - make
        - llvm-openmp  # [osx]
        - libgomp      # [linux and not aarch64 and cuda_compiler_version == "None"]
      host:
        - python
        - scikit-build
        - pip
        - llvm-openmp  # [osx]
        - libgomp      # [linux and not aarch64 and cuda_compiler_version == "None"]
      run:
        - python
        - numpy >=1.11.1
        - llvm-openmp  # [osx]
        - libgomp      # [linux and not aarch64]
      run_constrained:
        - goofit-proc * {{ goofit_proc_type }}
        - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default("10.9") }}  # [osx]

    script: build-cpu.sh  # [not linux or cuda_compiler_version == "None"]
    script: build-gpu.sh  # [linux and cuda_compiler_version != "None"]

    test:
      requires:
        - pytest
      source_files:
        - python/tests/test_exp.py
      imports:
        - goofit
      commands:
        - $PYTHON -m goofit
        - $PYTHON -m pytest python/tests/test_exp.py  # [not linux or cuda_compiler_version == "None"]

about:
  home: https://github.com/GooFit/GooFit
  license: LGPL-3.0-only
  license_family: LGPL
  license_file: LICENSE
  summary: A fitting package for GPU and CPU
  description: |
    GooFit is split into GPU and CPU versions on Linux. If you want to install for gpus, you can do:
    
    ```bash
    conda install goofit goofit-proc=*=gpu
    ```
    
    You can add `cudatoolkit=10.0` or `9.2` if you want a specific toolkit version.
    
    The OpenMP CPU version is default, but can be explicitly requested with:
    
    ```bash
    conda install goofit goofit-proc=*=cpu
    ```

extra:
  recipe-maintainers:
    - chrisburr
    - danielsibemol
    - henryiii
